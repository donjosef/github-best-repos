{"version":3,"sources":["components/Search/ListResults/ListResults.js","api/api.js","components/Search/Search.js","components/Select/Select.js","components/Hits/Hit/Hit.js","components/Hits/FakeHit/FakeHit.js","containers/FetchData/FetchData.js","hoc/WithPaginate/WithPaginate.js","components/Hits/Hits.js","components/StarWatchers/Watcher/Watcher.js","components/StarWatchers/StarWatchers.js","utilities/utilities.js","components/ReadMePage/ReadMePage.js","App.js","serviceWorker.js","index.js"],"names":["ListResults","props","onClickLink","results","map","result","react_default","a","createElement","Link","to","owner","login","name","key","id","onClick","className","getData","_x","_x2","_getData","apply","this","arguments","_callee","type","searchParams","page","res","pageCount","_args","regenerator_default","wrap","_context","prev","next","length","undefined","axios","get","concat","language","date","sent","repo","headersLink","parseLink","headers","link","last","parseInt","abrupt","data","items","stop","_callee2","query","_context2","getReadMe","_x4","_x5","_getReadMe","_callee3","_context3","Search","state","changeQuery","e","_this","setState","target","value","removeResults","prevProps","prevState","_this2","_x3","_getReposDynamically","getReposDynamically","then","placeholder","onChange","ListResults_ListResults","Component","Select","optValues","onSelect","label","options","val","library","add","faStar","Hit","url","avatar","stars","description","creationDate","updateDate","src","alt","href","react_fontawesome_index_es","icon","size","color","substr","FakeHit","FetchData","loading","error","pathname","location","endsWith","catch","err","message","currentPage","match","_this3","render","Object","objectSpread","history","faChevronLeft","faChevronRight","WithPaginate","changePageHandler","selected","children","_this$props$router","router","push","window","scrollTo","top","dist_default","pageRangeDisplayed","marginPagesDisplayed","onPageChange","disableInitialCallback","forcePage","containerClassName","pageLinkClassName","pageClassName","previousClassName","nextClassName","previousLabel","nextLabel","activeClassName","displayHits","hits","Array","fill","_","index","FakeHit_FakeHit","hit","includes","Hits_Hit_Hit","html_url","avatar_url","stargazers_count","created_at","updated_at","hoc_WithPaginate_WithPaginate","Hits","containers_FetchData_FetchData","Watcher","displayWatchers","watchers","watcher","StarWatchers_Watcher_Watcher","style","paddingTop","StarWatchers","params","getDateOfPastYears","years","now","Date","toISOString","marked","require","ReadMePage","markdown","_this$props$match$par","_this$props$match$par2","parsed","string","el","document","innerHTML","parseHtml","walkTheNode","node","func","firstElementChild","nextElementSibling","nodeType","getAttribute","removeAttribute","nodeName","display","dangerouslySetInnerHTML","__html","App","dateSelectValue","changeLanguageHandler","changeDateHandler","controlsWrapper","components_Select_Select","homeLink","components_Search_Search","Switch","Route","path","component","Hits_Hits","assign","Boolean","hostname","ReactDOM","BrowserRouter","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ea8cad4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ListResults(props) {\r\n    const {onClickLink} = props;\r\n    const results = props.results.map(result => (\r\n        <Link\r\n            to={'/' + result.owner.login + '/' + result.name + '/readme'}\r\n            key={result.id}>\r\n            <li>{result.name}</li>\r\n        </Link>\r\n    ));\r\n    return (\r\n        <ul onClick={onClickLink} className=\"header__list-results\">\r\n            {results}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListResults;\r\n","import axios from 'axios';\r\nimport parseLink from 'parse-link-header';\r\n\r\nfunction isLastPage(headersLink) {\r\n    return headersLink.last ? false : true;\r\n}\r\n\r\nexport async function getData(type, searchParams, page = 1) {\r\n    let res;\r\n\r\n    if(type === 'repos') {\r\n        res = await axios.get(`https://api.github.com/search/repositories?q=stars:>1+language:${searchParams.language}+created:>${searchParams.date}&sort=stars&order=desc&per_page=40&page=${page}`);\r\n    }\r\n\r\n    if(type === 'starwatchers') {\r\n        res = await axios.get(`https://api.github.com/repos/${searchParams.owner}/${searchParams.repo}/stargazers?per_page=40&page=${page}`);\r\n    }\r\n\r\n    let pageCount;\r\n    if (isLastPage(parseLink(res.headers.link))) {\r\n        pageCount = parseInt(parseLink(res.headers.link).prev.page, 10) + 1;\r\n    } else {\r\n        pageCount = parseInt(parseLink(res.headers.link).last.page, 10);\r\n    }\r\n\r\n    /*return the object representing the response for repos or starwatchers. This response will be handled by FetchData component to set the state*/\r\n    return type === 'repos' ? {data: res.data.items, pageCount } : {data: res.data, pageCount}\r\n    \r\n}\r\n\r\nexport async function getReposDynamically(query) {\r\n    const res = await axios.get(`https://api.github.com/search/repositories?q=${query}+in:name+stars:>1000&per_page=10`);\r\n\r\n    return {\r\n        results: res.data.items\r\n    };\r\n}\r\n\r\nexport async function getReadMe(owner, repo) {\r\n    const res = await axios.get(`https://raw.githubusercontent.com/${owner}/${repo}/master/README.md`);\r\n    return res.data;\r\n}","import React, { Component } from 'react';\r\nimport ListResults from './ListResults/ListResults';\r\nimport { getReposDynamically } from '../../api/api';\r\nclass Search extends Component {\r\n    state = {\r\n        query: \"\",\r\n        results: []\r\n    }\r\n\r\n    changeQuery = (e) => {\r\n        this.setState({ query: e.target.value })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.query !== this.state.query && this.state.query) {\r\n            const { query } = this.state;\r\n            getReposDynamically(query)\r\n                .then(data => {\r\n                    this.setState({ results: data.results })\r\n                })\r\n        }\r\n\r\n        if (prevState.query !== this.state.query && !this.state.query) {\r\n            this.removeResults();\r\n        }\r\n\r\n    }\r\n\r\n    removeResults = () => {\r\n        this.setState({ \r\n            results: [],\r\n            query: \"\"\r\n         });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header__search\">\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search readmes...\"\r\n                    value={this.state.query}\r\n                    onChange={this.changeQuery}\r\n                   />\r\n                <ListResults results={this.state.results} onClickLink={this.removeResults}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\n\r\nconst Select = (props) => {\r\n    const { value, optValues, onSelect, label, className } = props;\r\n    const options = optValues.map(val => (\r\n        <option key={val} value={val}>{val}</option>\r\n    ));\r\n\r\n    if (label) {\r\n        return (\r\n            <label className='controls-wrapper__label'>\r\n                <span>{label}</span>\r\n                <select className={className} value={value} onChange={onSelect}>\r\n                    {options}\r\n                </select>\r\n            </label>\r\n        );\r\n    } else {\r\n        return (\r\n            <select className={className} value={value} onChange={onSelect}>\r\n                {options}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faStar)\r\n\r\nconst Hit = (props) => {\r\n    const { name, url, avatar, stars, language, description, creationDate, updateDate, type, owner } = props;\r\n    return (\r\n        <li className='hit'>\r\n            <div className='hit__header'>\r\n                <div className='hit__avatar'>\r\n                    <img src={avatar} alt={name}/>\r\n                </div>\r\n                <h2 className='hit__title'><a href={url}>{name}</a></h2>\r\n                <div className='hit__language'>\r\n                    <p>{language}</p>\r\n                </div>\r\n                <Link className='hit__stars' to={'/' + owner + '/' + name + '/starwatchers'}>\r\n                    <FontAwesomeIcon icon=\"star\" size='xs' color='#FBBC05' />\r\n                    <p>{stars}</p>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='hit__body'>\r\n            <h3>{type}</h3>\r\n                <p>{description}</p>\r\n                <p>Created at: {creationDate.substr(0, 10)}</p>\r\n                <p>Last update: {updateDate.substr(0, 10)}</p>            \r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Hit;\r\n","import React from 'react'\r\n\r\nfunction FakeHit(props) {\r\n    return (\r\n        <li className=\"hit\">\r\n            <div className='fake-hit__header'>\r\n                <div className=\"fake-hit__loader\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n                <div className='fake-title'></div>\r\n            </div>\r\n\r\n            <div className='fake-hit__body'>\r\n                <div className='fake-type'></div>\r\n                <div className='fake-description'></div>\r\n                <div className='fake-creationDate'></div>\r\n                <div className='fake-updateDate'></div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default FakeHit;\r\n","import { Component } from 'react';\r\nimport { getData } from '../../api/api';\r\n\r\n/*FetchData is concerned with logic only. \r\nIt makes use of render props to render dinamically whatever it wants\r\nSince Hits and StarWatchers used the same logic, this logic has been abstracted inside this container*/\r\nclass FetchData extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        loading: true,\r\n        pageCount: 0,\r\n        error: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pathname = this.props.location.pathname;\r\n        /*\r\n        getData for the first page\r\n        getData accepts page as parameter, in this case the default is 1*/\r\n        if (pathname === '/' ||\r\n            pathname === '/page1' ||\r\n            pathname.endsWith('/starwatchers') ||\r\n            pathname.endsWith('/starwatchers/1')) {\r\n            getData(this.props.type, this.props.searchParams)\r\n                .then(res => {\r\n                    this.setState({\r\n                        data: res.data,\r\n                        pageCount: res.pageCount,\r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(err => this.setState({ error: err.message, loading: false }))\r\n        } else {\r\n            /*Otherwise getData will be invoked with the currentPage extracted from route parameters*/\r\n            const regEx = /\\d+/;\r\n            const currentPage = pathname.match(regEx)[0];\r\n            getData(this.props.type, this.props.searchParams, currentPage)\r\n                .then(res => {\r\n                    this.setState({\r\n                        data: res.data,\r\n                        pageCount: res.pageCount,\r\n                        loading: false\r\n                    });\r\n                })\r\n                .catch(err => this.setState({ error: err.message, loading: false }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.location.pathname !== this.props.location.pathname ||\r\n            prevProps.searchParams.language !== this.props.searchParams.language ||\r\n            prevProps.searchParams.date !== this.props.searchParams.date) {\r\n            let page;\r\n            const regEx = /\\d+/;\r\n\r\n            if (this.props.location.pathname === '/' ||\r\n                this.props.location.pathname.endsWith('/starwatchers')) {\r\n                page = 1;\r\n            } else {\r\n                page = this.props.location.pathname.match(regEx)[0]; //extract the number of current page from pathname\r\n            }\r\n\r\n            this.setState(prevState => ({\r\n                loading: !prevState.loading\r\n            }));\r\n\r\n            getData(this.props.type, this.props.searchParams, page)\r\n                .then(res => {\r\n                    this.setState({\r\n                        data: res.data,\r\n                        pageCount: res.pageCount,\r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(err => this.setState({ error: err.message }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.render({\r\n                ...this.state,\r\n                history: this.props.history,\r\n                match: this.props.match,\r\n                location: this.props.location\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport default FetchData;","import React, { Component } from 'react';\r\nimport Paginate from 'react-paginate';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faChevronLeft, faChevronRight);\r\n\r\nclass WithPaginate extends Component {\r\n\r\n    changePageHandler = (data) => {\r\n        //Change navigation behviour based on component being rendered\r\n        const page = data.selected + 1;\r\n        const {props: {className}} = this.props.children; //nested destructuring\r\n        const {history, match} = this.props.router;\r\n        if(className === 'hits') {\r\n            history.push('/page' + page);\r\n        } else if(className === 'watchers') {\r\n            if(match.url[match.url.length - 1] === '/') {\r\n                 history.push(match.url + page);\r\n            } else {\r\n                history.push(match.url + '/' + page);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.router.location.pathname !== this.props.router.location.pathname) {\r\n            window.scrollTo({top: 0});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pathname = this.props.router.location.pathname;\r\n            const regex = /\\d+/;\r\n            let currentPage;\r\n\r\n            if (pathname === '/' || pathname.endsWith('/starwatchers')) {\r\n                currentPage = 1;\r\n            } else {\r\n                currentPage = parseInt(pathname.match(regex)[0], 10);\r\n            }\r\n\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n                <Paginate\r\n                    pageCount={this.props.pageCount}\r\n                    pageRangeDisplayed={3}\r\n                    marginPagesDisplayed={2}\r\n                    onPageChange={this.changePageHandler}\r\n                    disableInitialCallback\r\n                    forcePage={currentPage - 1}\r\n                    containerClassName='paginate-wrapper'\r\n                    pageLinkClassName='paginate-link'\r\n                    pageClassName='paginate-li'\r\n                    previousClassName='paginate-li'\r\n                    nextClassName='paginate-li'\r\n                    previousLabel={<FontAwesomeIcon icon='chevron-left' />}\r\n                    nextLabel={<FontAwesomeIcon icon='chevron-right' />}\r\n                    activeClassName='active-link'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WithPaginate;\r\n","import React from 'react';\r\nimport Hit from './Hit/Hit';\r\nimport FakeHit from './FakeHit/FakeHit';\r\nimport FetchData from '../../containers/FetchData/FetchData';\r\nimport WithPaginate from '../../hoc/WithPaginate/WithPaginate';\r\n\r\n/*\r\nIMPORTANT: \r\ndisplayHits is passed as reference to render, and gets invoked by render of FetchData. \r\nFetchData passes its own state and props (its logic) to this function\r\nThis function render jsx (specifically Hits component)\r\nthis component is concerned with presentation only\r\n*/\r\nfunction displayHits(props) {\r\n    let hits;\r\n    if (props.loading) {\r\n        hits = Array(40).fill(null).map((_, index) => <FakeHit key={'hit' + index} />)\r\n    } else {\r\n        hits = props.data.map(hit => {\r\n            /*Remove dummy repo named eeeeee from the results*/\r\n            if (hit.name.includes('eeeeeee')) {\r\n                return null;\r\n            } else {\r\n                return (\r\n                    <Hit\r\n                        key={hit.id}\r\n                        owner={hit.owner.login}\r\n                        name={hit.name}\r\n                        url={hit.html_url}\r\n                        avatar={hit.owner.avatar_url}\r\n                        stars={hit.stargazers_count}\r\n                        language={hit.language}\r\n                        description={hit.description}\r\n                        creationDate={hit.created_at}\r\n                        updateDate={hit.updated_at}\r\n                        type={hit.owner.type} />\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    if (props.error) {\r\n        return <h1>{props.error}</h1>\r\n    } else {\r\n        return (\r\n            <WithPaginate\r\n                pageCount={props.pageCount}\r\n                router={{\r\n                    history: props.history,\r\n                    match: props.match,\r\n                    location: props.location\r\n                }}>\r\n                <ul className='hits'>\r\n                    {hits}\r\n                </ul>\r\n            </WithPaginate>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nfunction Hits(props) {\r\n    //router props are needed by FetchData to handle to logic properly\r\n    const { history, match, location, language, date } = props;\r\n    return (\r\n        <FetchData\r\n            type=\"repos\"\r\n            location={location}\r\n            history={history}\r\n            match={match}\r\n            searchParams={{ language, date }}\r\n            render={displayHits}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Hits;\r\n","import React from 'react';\r\n\r\nconst Watcher = (props) => {\r\n    const { avatar, name, url} = props;\r\n    return (\r\n        <li className='watcher'>\r\n            <div className='watcher__avatar'>\r\n                <img src={avatar} alt={name}/>\r\n            </div>\r\n            <h3><a href={url} >{name}</a></h3>\r\n        </li>\r\n    )\r\n}\r\n          \r\nexport default Watcher;\r\n","import React from 'react';\r\nimport Watcher from './Watcher/Watcher';\r\nimport FetchData from '../../containers/FetchData/FetchData';\r\nimport WithPaginate from '../../hoc/WithPaginate/WithPaginate';\r\nimport './StarWatchers.css';\r\n\r\n/*\r\nIMPORTANT: \r\ndisplayWatchers gets invoked by render of FetchData. \r\nFetchData passes its own state and props (its logic) to this function\r\nThis function render jsx (specifically StarWatchers component)\r\nthis component is concerned with presentation only just like Hits\r\n*/\r\nfunction displayWatchers(props) {\r\n    const watchers = props.data.map(watcher => {\r\n        return <Watcher\r\n            key={watcher.id}\r\n            avatar={watcher.avatar_url}\r\n            name={watcher.login}\r\n            url={watcher.html_url} />\r\n    });\r\n\r\n    if (props.error) {\r\n        return <h1 style={{ paddingTop: 170 }}>{props.error}</h1>\r\n    } else {\r\n        return (\r\n            <WithPaginate\r\n                pageCount={props.pageCount}\r\n                router={{\r\n                    history: props.history,\r\n                    match: props.match,\r\n                    location: props.location\r\n                }}>\r\n                <ul className='watchers'>{watchers}</ul>\r\n            </WithPaginate>\r\n        )\r\n    }\r\n}\r\n\r\nfunction StarWatchers(props) {\r\n    const { history, match, location } = props;\r\n\r\n    return (\r\n        <FetchData\r\n            type=\"starwatchers\"\r\n            location={location}\r\n            history={history}\r\n            match={match}\r\n            searchParams={{ owner: match.params.owner, repo: match.params.repo }}\r\n            render={displayWatchers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default StarWatchers;\r\n","export const getDateOfPastYears = (years) => {\r\n    const now = Date.now();\r\n    const msOfYears = (365 * years) * 86400000;\r\n    const pastDate = new Date(now - msOfYears);\r\n    const isoDate = pastDate.toISOString().substr(0, 10); //github api requires iso formatted date\r\n    return isoDate;\r\n};\r\n\r\nexport const parseHtml = (string) =>{\r\n    const el = document.createElement('div');\r\n    el.innerHTML = string;\r\n    return el;\r\n};\r\n\r\nexport const walkTheNode = (node, func) => {\r\n    func(node);\r\n    node = node.firstElementChild;\r\n    while (node) {\r\n        walkTheNode(node, func);\r\n        node = node.nextElementSibling;\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { getReadMe } from '../../api/api';\r\nimport { parseHtml, walkTheNode } from '../../utilities/utilities';\r\nconst marked = require('marked');\r\n\r\nclass ReadMePage extends Component {\r\n\r\n    state = {\r\n        markdown: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { owner, repo } = this.props.match.params;\r\n\r\n        getReadMe(owner, repo)\r\n            .then(markdown => {\r\n                this.setState({ markdown })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.location.pathname !== this.props.location.pathname) {\r\n            const { owner, repo } = this.props.match.params;\r\n\r\n            getReadMe(owner, repo)\r\n                .then(markdown => {\r\n                    this.setState({ markdown })\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        /*\r\n            * marked return a string representing the html\r\n            * parse that string, so one can walks recursively the dom\r\n            * reset alignment of text and remove all images from original markdown, to avoid layout problems\r\n            * set as innerHtml of this component\r\n        */\r\n        const htmlInString = marked(this.state.markdown);\r\n        const parsed = parseHtml(htmlInString);\r\n        walkTheNode(parsed, (node) => {\r\n            if (node.nodeType === 1) {\r\n                if (node.getAttribute('align')) {\r\n                    node.removeAttribute('align');\r\n                }\r\n                if (node.nodeName === 'IMG') {\r\n                    node.style.display = 'none'; //do not remove, otherwise recursion will not work\r\n                }\r\n            }\r\n        });\r\n        return <div className=\"readme-page\" dangerouslySetInnerHTML={{ __html: parsed.innerHTML }}></div>\r\n    }\r\n}\r\n\r\n\r\nexport default ReadMePage;\r\n","import React, { Component } from 'react';\nimport Search from './components/Search/Search';\nimport Select from './components/Select/Select';\nimport Hits from './components/Hits/Hits';\nimport StarWatchers from './components/StarWatchers/StarWatchers';\nimport ReadMePage from './components/ReadMePage/ReadMePage';\n\nimport { getDateOfPastYears } from './utilities/utilities';\n\nimport { Route, Switch, Link } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    language: 'javascript',\n    date: '2011-01-01',\n    dateSelectValue: 'all'\n  }\n\n  changeLanguageHandler = (e) => {\n    this.setState({ language: e.target.value });\n  }\n\n  changeDateHandler = (e) => {\n    this.setState({ dateSelectValue: e.target.value });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.dateSelectValue !== this.state.dateSelectValue) {\n      switch (this.state.dateSelectValue) {\n        case 'all':\n          this.setState({ date: '2011-01-01' });\n          break;\n        case 'last 5 years':\n          this.setState({\n            date: getDateOfPastYears(5)\n          });\n          break;\n        case 'last year':\n          this.setState({\n            date: getDateOfPastYears(1)\n          });\n          break;\n      }\n    }\n  }\n\n\n  render() {\n    let controlsWrapper =\n      <div className='controls-wrapper'>\n        <Select\n          className='controls-wrapper__select'\n          label='Search'\n          optValues={['all', 'javascript', 'java', 'python', 'ruby']}\n          onSelect={this.changeLanguageHandler}\n          value={this.state.language} />\n        <Select\n          className='controls-wrapper__select'\n          label='for'\n          optValues={['all', 'last year', 'last 5 years']}\n          onSelect={this.changeDateHandler}\n          value={this.dateSelectValue} />\n      </div>;\n\n    let homeLink = null;\n    const { pathname } = this.props.location;\n\n    if (pathname.includes('/readme') || pathname.includes('/starwatchers')) {\n      controlsWrapper = null;\n    }\n\n    if (pathname.includes('/readme') || pathname.includes('/starwatchers')) {\n      homeLink = <Link className='header__home-link' to='/'>Home</Link>;\n    }\n\n    return (\n      <div className=\"App\">\n        <header className='header'>\n          {homeLink}\n          <h1 className='header__title'>Most popular github repos</h1>\n          <Search />\n        </header>\n\n        {controlsWrapper}\n\n        <Switch>\n          <Route path='/:owner/:repo/readme' component={ReadMePage} />\n          <Route path='/:owner/:repo/starwatchers' component={StarWatchers} />\n          <Route path='/' render={(props) => (\n            <Hits language={this.state.language} date={this.state.date} {...props} />\n          )} />\n        </Switch>\n        <footer className=\"footer\">Made with love by <a href=\"https://github.com/donjosef\">Giuseppe Montanaro</a></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter basename='/github-best-repos'>\n    <Route component={App} />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}