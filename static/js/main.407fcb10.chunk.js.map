{"version":3,"sources":["components/Search/ListResults/ListResults.js","api/api.js","components/Search/Search.js","components/Select/Select.js","components/Hits/Hit/Hit.js","hoc/WithPaginate/WithPaginate.js","components/LoadingBar/LoadingBar.js","components/Hits/Hits.js","components/StarWatchers/Watcher/Watcher.js","components/StarWatchers/StarWatchers.js","utilities/utilities.js","components/ReadMePage/ReadMePage.js","App.js","serviceWorker.js","index.js"],"names":["ListResults","props","onClickLink","results","map","result","react_default","a","createElement","Link","to","owner","login","name","key","id","onClick","className","isLastPage","headersLink","last","getRepos","_x","_x2","_getRepos","apply","this","arguments","_callee","language","date","page","res","pageCount","_args","regenerator_default","wrap","_context","prev","next","length","undefined","axios","get","concat","sent","parseLink","headers","link","parseInt","abrupt","hits","data","items","stop","_callee2","query","_context2","getReadMe","_x4","_x5","_getReadMe","_callee3","repo","_context3","getWatchers","_x6","_x7","_getWatchers","_callee4","_args4","_context4","watchers","Search","state","changeQuery","e","_this","setState","target","value","removeResults","prevProps","prevState","_this2","_x3","_getReposDynamically","getReposDynamically","then","type","placeholder","onChange","ListResults_ListResults","Component","Select","optValues","onSelect","label","options","val","library","add","faStar","Hit","url","avatar","stars","description","creationDate","updateDate","src","alt","href","react_fontawesome_index_es","icon","size","color","substr","faChevronLeft","faChevronRight","WithPaginate","changePageHandler","selected","children","_this$props$router","router","history","match","push","currentPage","pathname","location","endsWith","dist_default","pageRangeDisplayed","marginPagesDisplayed","onPageChange","disableInitialCallback","forcePage","containerClassName","pageLinkClassName","pageClassName","previousClassName","nextClassName","previousLabel","nextLabel","activeClassName","LoadingBar","style","width","percentage","Hits","loading","error","componentDidMount","_this$props","interval","setInterval","clearInterval","catch","err","message","_this$props2","console","log","hit","includes","Hits_Hit_Hit","html_url","avatar_url","stargazers_count","created_at","updated_at","hoc_WithPaginate_WithPaginate","components_LoadingBar_LoadingBar","React","Watcher","StarWatchers","_this$props$match$par","params","_this3","regEx","_this$props$match$par2","watcher","StarWatchers_Watcher_Watcher","output","getDateOfPastYears","years","now","Date","toISOString","marked","require","ReadMePage","markdown","parsed","string","el","document","innerHTML","parseHtml","walkTheNode","node","func","firstElementChild","nextElementSibling","nodeType","getAttribute","removeAttribute","nodeName","display","dangerouslySetInnerHTML","__html","App","dateSelectValue","changeLanguageHandler","changeDateHandler","controlsWrapper","components_Select_Select","homeLink","components_Search_Search","Switch","Route","path","component","render","components_Hits_Hits","Object","assign","Boolean","window","hostname","ReactDOM","BrowserRouter","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iTAmBeA,MAhBf,SAAqBC,GAAO,IACjBC,EAAeD,EAAfC,YACDC,EAAUF,EAAME,QAAQC,IAAI,SAAAC,GAAM,OACpCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,GAAI,IAAML,EAAOM,MAAMC,MAAQ,IAAMP,EAAOQ,KAAO,UACnDC,IAAKT,EAAOU,IACZT,EAAAC,EAAAC,cAAA,UAAKH,EAAOQ,SAGpB,OACIP,EAAAC,EAAAC,cAAA,MAAIQ,QAASd,EAAae,UAAU,wBAC/Bd,+DCXb,SAASe,EAAWC,GAChB,OAAOA,EAAYC,KAGhB,SAAeC,EAAtBC,EAAAC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAAwBC,EAAUC,GAAlC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAP,UAAA,OAAAQ,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAwCR,EAAxCG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAA+C,EAA/CG,EAAAE,KAAA,EACeG,IAAMC,IAAN,kEAAAC,OAA4Ef,EAA5E,cAAAe,OAAiGd,EAAjG,4CAAAc,OAAgJb,IAD/J,cACGC,EADHK,EAAAQ,KAKCZ,EADAf,EAAW4B,IAAUd,EAAIe,QAAQC,OACrBC,SAASH,IAAUd,EAAIe,QAAQC,MAAMV,KAAKP,KAAM,IAAM,EAEtDkB,SAASH,IAAUd,EAAIe,QAAQC,MAAM5B,KAAKW,KAAM,IAP7DM,EAAAa,OAAA,SAUI,CACHC,KAAMnB,EAAIoB,KAAKC,MACfpB,cAZD,wBAAAI,EAAAiB,SAAA1B,EAAAF,2EAgBA,SAAA6B,EAAmCC,GAAnC,IAAAxB,EAAA,OAAAG,EAAA5B,EAAA6B,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACeG,IAAMC,IAAN,gDAAAC,OAA0DY,EAA1D,qCADf,cACGxB,EADHyB,EAAAZ,KAAAY,EAAAP,OAAA,SAGI,CACH/C,QAAS6B,EAAIoB,KAAKC,QAJnB,wBAAAI,EAAAH,SAAAC,EAAA7B,gCAQA,SAAegC,EAAtBC,EAAAC,GAAA,OAAAC,EAAApC,MAAAC,KAAAC,sDAAO,SAAAmC,EAAyBnD,EAAOoD,GAAhC,IAAA/B,EAAA,OAAAG,EAAA5B,EAAA6B,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACeG,IAAMC,IAAN,qCAAAC,OAA+CjC,EAA/C,KAAAiC,OAAwDmB,EAAxD,sBADf,cACG/B,EADHgC,EAAAnB,KAAAmB,EAAAd,OAAA,SAEIlB,EAAIoB,MAFR,wBAAAY,EAAAV,SAAAQ,EAAApC,gCAMA,SAAeuC,EAAtBC,EAAAC,GAAA,OAAAC,EAAA3C,MAAAC,KAAAC,sDAAO,SAAA0C,EAA2B1D,EAAOoD,GAAlC,IAAAhC,EAAAC,EAAAC,EAAAqC,EAAA3C,UAAA,OAAAQ,EAAA5B,EAAA6B,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAwCR,EAAxCuC,EAAA9B,OAAA,QAAAC,IAAA6B,EAAA,GAAAA,EAAA,GAA+C,EAA/CC,EAAAhC,KAAA,EACeG,IAAMC,IAAN,gCAAAC,OAA0CjC,EAA1C,KAAAiC,OAAmDmB,EAAnD,iCAAAnB,OAAuFb,IADtG,cACGC,EADHuC,EAAA1B,KAKCZ,EADAf,EAAW4B,IAAUd,EAAIe,QAAQC,OACrBC,SAASH,IAAUd,EAAIe,QAAQC,MAAMV,KAAKP,KAAM,IAAM,EAEtDkB,SAASH,IAAUd,EAAIe,QAAQC,MAAM5B,KAAKW,KAAM,IAP7DwC,EAAArB,OAAA,SAUI,CACHsB,SAAUxC,EAAIoB,KACdnB,cAZD,wBAAAsC,EAAAjB,SAAAe,EAAA3C,oCCaQ+C,6MA9CXC,MAAQ,CACJlB,MAAO,GACPrD,QAAS,MAGbwE,YAAc,SAACC,GACXC,EAAKC,SAAS,CAAEtB,MAAOoB,EAAEG,OAAOC,WAkBpCC,cAAgB,WACZJ,EAAKC,SAAS,CACV3E,QAAS,GACTqD,MAAO,wFAlBI0B,EAAWC,GAAW,IAAAC,EAAA1D,KACjCyD,EAAU3B,QAAU9B,KAAKgD,MAAMlB,OAAS9B,KAAKgD,MAAMlB,ODSxD,SAAP6B,GAAA,OAAAC,EAAA7D,MAAAC,KAAAC,WCPY4D,CADkB7D,KAAKgD,MAAflB,OAEHgC,KAAK,SAAApC,GACFgC,EAAKN,SAAS,CAAE3E,QAASiD,EAAKjD,YAItCgF,EAAU3B,QAAU9B,KAAKgD,MAAMlB,OAAU9B,KAAKgD,MAAMlB,OACpD9B,KAAKuD,iDAaT,OACI3E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACXX,EAAAC,EAAAC,cAAA,SACIiF,KAAK,SACLC,YAAY,oBACZV,MAAOtD,KAAKgD,MAAMlB,MAClBmC,SAAUjE,KAAKiD,cAEnBrE,EAAAC,EAAAC,cAACoF,EAAD,CAAazF,QAASuB,KAAKgD,MAAMvE,QAASD,YAAawB,KAAKuD,wBAzCvDY,aCuBNC,EAxBA,SAAC7F,GAAU,IACd+E,EAAiD/E,EAAjD+E,MAAOe,EAA0C9F,EAA1C8F,UAAWC,EAA+B/F,EAA/B+F,SAAUC,EAAqBhG,EAArBgG,MAAOhF,EAAchB,EAAdgB,UACrCiF,EAAUH,EAAU3F,IAAI,SAAA+F,GAAG,OAC7B7F,EAAAC,EAAAC,cAAA,UAAQM,IAAKqF,EAAKnB,MAAOmB,GAAMA,KAGnC,OAAIF,EAEI3F,EAAAC,EAAAC,cAAA,SAAOS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,YAAOyF,GACP3F,EAAAC,EAAAC,cAAA,UAAQS,UAAWA,EAAW+D,MAAOA,EAAOW,SAAUK,GACjDE,IAMT5F,EAAAC,EAAAC,cAAA,UAAQS,UAAWA,EAAW+D,MAAOA,EAAOW,SAAUK,GACjDE,4BCZjBE,IAAQC,IAAIC,KAEZ,IA4BeC,EA5BH,SAACtG,GAAU,IACXY,EAA2FZ,EAA3FY,KAAM2F,EAAqFvG,EAArFuG,IAAKC,EAAgFxG,EAAhFwG,OAAQC,EAAwEzG,EAAxEyG,MAAO7E,EAAiE5B,EAAjE4B,SAAU8E,EAAuD1G,EAAvD0G,YAAaC,EAA0C3G,EAA1C2G,aAAcC,EAA4B5G,EAA5B4G,WAAYpB,EAAgBxF,EAAhBwF,KAAM9E,EAAUV,EAAVU,MACzF,OACIL,EAAAC,EAAAC,cAAA,MAAIS,UAAU,OACVX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,OAAKsG,IAAKL,EAAQM,IAAKlG,KAE3BP,EAAAC,EAAAC,cAAA,MAAIS,UAAU,cAAaX,EAAAC,EAAAC,cAAA,KAAGwG,KAAMR,GAAM3F,IAC1CP,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACXX,EAAAC,EAAAC,cAAA,SAAIqB,IAERvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,aAAaP,GAAI,IAAMC,EAAQ,IAAME,EAAO,iBACxDP,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,KAAKC,MAAM,YAC7C9G,EAAAC,EAAAC,cAAA,SAAIkG,KAIZpG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACfX,EAAAC,EAAAC,cAAA,UAAKiF,GACDnF,EAAAC,EAAAC,cAAA,SAAImG,GACJrG,EAAAC,EAAAC,cAAA,wBAAgBoG,EAAaS,OAAO,EAAG,KACvC/G,EAAAC,EAAAC,cAAA,yBAAiBqG,EAAWQ,OAAO,EAAG,yBCxBtDjB,IAAQC,IAAIiB,IAAeC,SAuDZC,6MAnDXC,kBAAoB,SAACrE,GAEjB,IAAMrB,EAAOqB,EAAKsE,SAAW,EACdzG,EAAc4D,EAAK5E,MAAM0H,SAAjC1H,MAAQgB,UAHW2G,EAID/C,EAAK5E,MAAM4H,OAA7BC,EAJmBF,EAInBE,QAASC,EAJUH,EAIVG,MACC,SAAd9G,EACC6G,EAAQE,KAAK,QAAUjG,GACH,aAAdd,IACiC,MAApC8G,EAAMvB,IAAIuB,EAAMvB,IAAIhE,OAAS,GAC3BsF,EAAQE,KAAKD,EAAMvB,IAAMzE,GAE1B+F,EAAQE,KAAKD,EAAMvB,IAAM,IAAMzE,6EAMvC,IAEQkG,EAFFC,EAAWxG,KAAKzB,MAAM4H,OAAOM,SAASD,SAU5C,OALQD,EADa,MAAbC,GAAoBA,EAASE,SAAS,iBACxB,EAEAnF,SAASiF,EAASH,MANtB,OAMmC,GAAI,IAIrDzH,EAAAC,EAAAC,cAAA,WACKkB,KAAKzB,MAAM0H,SACZrH,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CACI0B,UAAWP,KAAKzB,MAAMgC,UACtBqG,mBAAoB,EACpBC,qBAAsB,EACtBC,aAAc9G,KAAK+F,kBACnBgB,wBAAsB,EACtBC,UAAWT,EAAc,EACzBU,mBAAmB,mBACnBC,kBAAkB,gBAClBC,cAAc,cACdC,kBAAkB,cAClBC,cAAc,cACdC,cAAe1I,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAiBC,KAAK,iBACrC+B,UAAW3I,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAiBC,KAAK,kBACjCgC,gBAAgB,wBA9CTrD,aCCZsD,SARI,SAAClJ,GAClB,OACEK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAAA,OAAK4I,MAAO,CAACC,MAAOpJ,EAAMqJ,WAAa,KAAMrI,UAAU,mBCkI9CsI,6MA/HX7E,MAAQ,CACJvB,KAAM,GACNlB,UAAW,EACXuH,SAAS,EACTC,MAAO,KACPH,WAAY,KAGhBI,kBAAoB,WAChB,IAAMxB,EAAWrD,EAAK5E,MAAMkI,SAASD,SADfyB,EAEK9E,EAAK5E,MAAxB4B,EAFc8H,EAEd9H,SAAUC,EAFI6H,EAEJ7H,KAWlB,GATA+C,EAAKC,SAAS,CAAE0E,SAAS,EAAMF,WAAY,IAE3CzE,EAAK+E,SAAWC,YAAY,WAC1BhF,EAAKC,SAAS,SAAAK,GAAS,MAAK,CACxBmE,WAAYnE,EAAUmE,WAAa,OAEtC,KAGc,MAAbpB,GAAiC,WAAbA,EACpB7G,EAASQ,EAAUC,GACd0D,KAAK,SAAApC,GACF0G,cAAcjF,EAAK+E,UACnB/E,EAAKC,SAAS,CACV3B,KAAMC,EAAKD,KACXlB,UAAWmB,EAAKnB,UAChBqH,WAAY,IACZE,SAAS,MAGhBO,MAAM,SAAAC,GAAG,OAAInF,EAAKC,SAAS,CAAE2E,MAAOO,EAAIC,gBAC1C,CAGH5I,EAASQ,EAAUC,EADCoG,EAASH,MADf,OAC4B,IAErCvC,KAAK,SAAApC,GACJ0G,cAAcjF,EAAK+E,UACjB/E,EAAKC,SAAS,CACV3B,KAAMC,EAAKD,KACXlB,UAAWmB,EAAKnB,UAChBqH,WAAY,IACZE,SAAS,MAGhBO,MAAM,SAAAC,GAAG,OAAInF,EAAKC,SAAS,CAAE2E,MAAOO,EAAIC,gGAIlC/E,EAAWC,GAAW,IAAAC,EAAA1D,KAErC,GAAIwD,EAAUiD,SAASD,WAAaxG,KAAKzB,MAAMkI,SAASD,UACpDhD,EAAUrD,WAAaH,KAAKzB,MAAM4B,UAClCqD,EAAUpD,OAASJ,KAAKzB,MAAM6B,KAAM,CACpC,IAAIC,EADgCmI,EAGTxI,KAAKzB,MAAxB4B,EAH4BqI,EAG5BrI,SAAUC,EAHkBoI,EAGlBpI,KAGdC,EADiC,MAAjCL,KAAKzB,MAAMkI,SAASD,SACb,EAEAxG,KAAKzB,MAAMkI,SAASD,SAASH,MAN1B,OAMuC,GAGrDrG,KAAKoD,SAAS,CAAE0E,SAAS,EAAMF,WAAY,IAE3C,IAAMM,EAAWC,YAAY,WACzBzE,EAAKN,SAAS,SAAAK,GAAS,MAAK,CACxBmE,WAAYnE,EAAUmE,WAAa,OAExC,KAEHjI,EAASQ,EAAUC,EAAMC,GACpByD,KAAK,SAAApC,GACF0G,cAAcF,GACdxE,EAAKN,SAAS,CAAE3B,KAAMC,EAAKD,KAAMmG,WAAY,IAAKE,SAAS,MAE9DO,MAAM,SAAAC,GAAG,OAAIG,QAAQC,IAAIJ,uCAKlC,IAAM7G,EAAOzB,KAAKgD,MAAMvB,KAAK/C,IAAI,SAAAiK,GAE7B,OAAIA,EAAIxJ,KAAKyJ,SAAS,WACX,KAGHhK,EAAAC,EAAAC,cAAC+J,EAAD,CACIzJ,IAAKuJ,EAAItJ,GACTJ,MAAO0J,EAAI1J,MAAMC,MACjBC,KAAMwJ,EAAIxJ,KACV2F,IAAK6D,EAAIG,SACT/D,OAAQ4D,EAAI1J,MAAM8J,WAClB/D,MAAO2D,EAAIK,iBACX7I,SAAUwI,EAAIxI,SACd8E,YAAa0D,EAAI1D,YACjBC,aAAcyD,EAAIM,WAClB9D,WAAYwD,EAAIO,WAChBnF,KAAM4E,EAAI1J,MAAM8E,SAKhC,OAAK/D,KAAKgD,MAAM8E,SAAW9H,KAAKgD,MAAM4E,YAAc,IAE5ChJ,EAAAC,EAAAC,cAACqK,EAAD,CAAc5I,UAAWP,KAAKgD,MAAMzC,UAAW4F,OAAQ,CACnDC,QAASpG,KAAKzB,MAAM6H,QACpBC,MAAOrG,KAAKzB,MAAM8H,MAClBI,SAAUzG,KAAKzB,MAAMkI,WAErB7H,EAAAC,EAAAC,cAAA,MAAIS,UAAU,QACTkC,IAKRzB,KAAKgD,MAAM+E,MAGLnJ,EAAAC,EAAAC,cAAA,UAAKkB,KAAKgD,MAAM+E,OAFhBnJ,EAAAC,EAAAC,cAACsK,EAAD,CAAYxB,WAAY5H,KAAKgD,MAAM4E,oBAzHvCyB,IAAMlF,WCOVmF,EAZC,SAAC/K,GAAU,IACfwG,EAAqBxG,EAArBwG,OAAQ5F,EAAaZ,EAAbY,KAAM2F,EAAOvG,EAAPuG,IACtB,OACIlG,EAAAC,EAAAC,cAAA,MAAIS,UAAU,WACVX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACXX,EAAAC,EAAAC,cAAA,OAAKsG,IAAKL,EAAQM,IAAKlG,KAE3BP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGwG,KAAMR,GAAO3F,MCgFjBoK,oNAjFXvG,MAAQ,CACJF,SAAU,GACVvC,UAAW,EACXwH,MAAO,yFAGS,IAAArE,EAAA1D,KAAAwJ,EACQxJ,KAAKzB,MAAM8H,MAAMoD,OAAjCxK,EADQuK,EACRvK,MAAOoD,EADCmH,EACDnH,KACTmE,EAAWxG,KAAKzB,MAAMkI,SAASD,SACrC,GAAIA,EAASE,SAAS,kBAAoBF,EAASE,SAAS,mBACxDnE,EAAYtD,EAAOoD,GACdyB,KAAK,SAAApC,GACFgC,EAAKN,SAAS,CACVN,SAAUpB,EAAKoB,SACfvC,UAAWmB,EAAKnB,cAGvB8H,MAAM,SAAAC,GAAG,OAAI5E,EAAKN,SAAS,CAAE2E,MAAOO,EAAIC,gBAC1C,CAIHhG,EAAYtD,EAAOoD,EAFCmE,EAASH,MADf,OAC4B,IAGrCvC,KAAK,SAAApC,GACFgC,EAAKN,SAAS,CACVN,SAAUpB,EAAKoB,SACfvC,UAAWmB,EAAKnB,cAGvB8H,MAAM,SAAAC,GAAG,OAAI5E,EAAKN,SAAS,CAAE2E,MAAOO,EAAIC,wDAIlC/E,EAAWC,GAAW,IAAAiG,EAAA1J,KACrC,GAAIwD,EAAUiD,SAASD,WAAaxG,KAAKzB,MAAMkI,SAASD,SAAU,CAC9D,IACMmD,EAAQ,MAFgDC,EAGtC5J,KAAKzB,MAAM8H,MAAMoD,OAQzClH,EAX8DqH,EAGtD3K,MAHsD2K,EAG/CvH,KAEVrC,KAAKzB,MAAMkI,SAASD,SAASH,MAAMsD,GAG7B3J,KAAKzB,MAAMkI,SAASD,SAASH,MAAMsD,GAAO,GAF1C,GAMN7F,KAAK,SAAApC,GACFgI,EAAKtG,SAAS,CAAEN,SAAUpB,EAAKoB,+CAO3C,IAAMA,EAAW9C,KAAKgD,MAAMF,SAASpE,IAAI,SAAAmL,GACrC,OAAOjL,EAAAC,EAAAC,cAACgL,EAAD,CACH1K,IAAKyK,EAAQxK,GACb0F,OAAQ8E,EAAQd,WAChB5J,KAAM0K,EAAQ3K,MACd4F,IAAK+E,EAAQf,aAGjBiB,EACAnL,EAAAC,EAAAC,cAACqK,EAAD,CACI5I,UAAWP,KAAKgD,MAAMzC,UACtB4F,OAAQ,CACJC,QAASpG,KAAKzB,MAAM6H,QACpBC,MAAOrG,KAAKzB,MAAM8H,MAClBI,SAAUzG,KAAKzB,MAAMkI,WAEzB7H,EAAAC,EAAAC,cAAA,MAAIS,UAAU,YAAYuD,IAOlC,OAJI9C,KAAKgD,MAAM+E,QACXgC,EAASnL,EAAAC,EAAAC,cAAA,UAAKkB,KAAKgD,MAAM+E,QAGtBgC,SA9EY5F,cCPd6F,EAAqB,SAACC,GAC/B,IAAMC,EAAMC,KAAKD,MAIjB,OAFiB,IAAIC,KAAKD,EADP,IAAMD,EAAS,OAETG,cAAczE,OAAO,EAAG,KCD/C0E,EAASC,EAAQ,IAoDRC,6MAhDXvH,MAAQ,CACJwH,SAAU,uFAGM,IAAA9G,EAAA1D,KAAAwJ,EACQxJ,KAAKzB,MAAM8H,MAAMoD,OAEzCzH,EAHgBwH,EACRvK,MADQuK,EACDnH,MAGVyB,KAAK,SAAA0G,GACF9G,EAAKN,SAAS,CAAEoH,0DAIThH,EAAWC,GAAW,IAAAiG,EAAA1J,KACrC,GAAIwD,EAAUiD,SAASD,WAAaxG,KAAKzB,MAAMkI,SAASD,SAAU,KAAAoD,EACtC5J,KAAKzB,MAAM8H,MAAMoD,OAEzCzH,EAH8D4H,EACtD3K,MADsD2K,EAC/CvH,MAGVyB,KAAK,SAAA0G,GACFd,EAAKtG,SAAS,CAAEoH,iDAY5B,IACMC,ED/BW,SAACC,GACtB,IAAMC,EAAKC,SAAS9L,cAAc,OAElC,OADA6L,EAAGE,UAAYH,EACRC,EC4BYG,CADMT,EAAOrK,KAAKgD,MAAMwH,WAYvC,ODpCmB,SAAdO,EAAeC,EAAMC,GAG9B,IAFAA,EAAKD,GACLA,EAAOA,EAAKE,kBACLF,GACHD,EAAYC,EAAMC,GAClBD,EAAOA,EAAKG,mBCqBZJ,CAAYN,EAAQ,SAACO,GACK,IAAlBA,EAAKI,WACDJ,EAAKK,aAAa,UAClBL,EAAKM,gBAAgB,SAEH,QAAlBN,EAAKO,WACLP,EAAKtD,MAAM8D,QAAU,WAI1B5M,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cAAckM,wBAAyB,CAAEC,OAAQjB,EAAOI,oBA7C7D1G,6BCgGVwH,oNAtFb3I,MAAQ,CACN7C,SAAU,aACVC,KAAM,aACNwL,gBAAiB,SAGnBC,sBAAwB,SAAC3I,GACvBC,EAAKC,SAAS,CAAEjD,SAAU+C,EAAEG,OAAOC,WAGrCwI,kBAAoB,SAAC5I,GACnBC,EAAKC,SAAS,CAAEwI,gBAAiB1I,EAAEG,OAAOC,2FAGzBE,EAAWC,GAC5B,GAAIA,EAAUmI,kBAAoB5L,KAAKgD,MAAM4I,gBAC3C,OAAQ5L,KAAKgD,MAAM4I,iBACjB,IAAK,MACH5L,KAAKoD,SAAS,CAAEhD,KAAM,eACtB,MACF,IAAK,eACHJ,KAAKoD,SAAS,CACZhD,KAAM4J,EAAmB,KAE3B,MACF,IAAK,YACHhK,KAAKoD,SAAS,CACZhD,KAAM4J,EAAmB,uCAQ1B,IAAAtG,EAAA1D,KACH+L,EACFnN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAACkN,EAAD,CACEzM,UAAU,2BACVgF,MAAM,SACNF,UAAW,CAAC,MAAO,aAAc,OAAQ,SAAU,QACnDC,SAAUtE,KAAK6L,sBACfvI,MAAOtD,KAAKgD,MAAM7C,WACpBvB,EAAAC,EAAAC,cAACkN,EAAD,CACEzM,UAAU,2BACVgF,MAAM,MACNF,UAAW,CAAC,MAAO,YAAa,gBAChCC,SAAUtE,KAAK8L,kBACfxI,MAAOtD,KAAK4L,mBAGdK,EAAW,KACPzF,EAAaxG,KAAKzB,MAAMkI,SAAxBD,SAUR,OARIA,EAASoC,SAAS,YAAcpC,EAASoC,SAAS,oBACpDmD,EAAkB,OAGhBvF,EAASoC,SAAS,YAAcpC,EAASoC,SAAS,oBACpDqD,EAAWrN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,oBAAoBP,GAAG,KAAvC,SAIXJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,UACf0M,EACDrN,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAd,6BACAX,EAAAC,EAAAC,cAACoN,EAAD,OAGDH,EAEDnN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KACEvN,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOC,KAAK,uBAAuBC,UAAW/B,IAC9C3L,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOC,KAAK,6BAA6BC,UAAW/C,IACpD3K,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOC,KAAK,IAAIE,OAAQ,SAAChO,GAAD,OACtBK,EAAAC,EAAAC,cAAC0N,EAADC,OAAAC,OAAA,CAAMvM,SAAUuD,EAAKV,MAAM7C,SAAUC,KAAMsD,EAAKV,MAAM5C,MAAU7B,QAGpEK,EAAAC,EAAAC,cAAA,UAAQS,UAAU,UAAlB,qBAA6CX,EAAAC,EAAAC,cAAA,KAAGwG,KAAK,+BAAR,+BAlFnCnB,sBCDEwI,QACW,cAA7BC,OAAOnG,SAASoG,UAEe,UAA7BD,OAAOnG,SAASoG,UAEhBD,OAAOnG,SAASoG,SAASxG,MACvB,2DCXNyG,IAASP,OACT3N,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAeC,SAAS,sBACpBpO,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOE,UAAWX,KACJf,SAASqC,eAAe,SDuHpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtJ,KAAK,SAAAuJ,GACjCA,EAAaC","file":"static/js/main.407fcb10.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ListResults(props) {\r\n    const {onClickLink} = props;\r\n    const results = props.results.map(result => (\r\n        <Link\r\n            to={'/' + result.owner.login + '/' + result.name + '/readme'}\r\n            key={result.id}>\r\n            <li>{result.name}</li>\r\n        </Link>\r\n    ));\r\n    return (\r\n        <ul onClick={onClickLink} className=\"header__list-results\">\r\n            {results}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListResults;\r\n","import axios from 'axios';\r\nimport parseLink from 'parse-link-header';\r\n\r\nfunction isLastPage(headersLink) {\r\n    return headersLink.last ? false : true;\r\n}\r\n\r\nexport async function getRepos(language, date, page = 1) {\r\n    const res = await axios.get(`https://api.github.com/search/repositories?q=stars:>1+language:${language}+created:>${date}&sort=stars&order=desc&per_page=40&page=${page}`);\r\n    \r\n    let pageCount;\r\n    if (isLastPage(parseLink(res.headers.link))) {\r\n        pageCount = parseInt(parseLink(res.headers.link).prev.page, 10) + 1;\r\n    } else {\r\n        pageCount = parseInt(parseLink(res.headers.link).last.page, 10);\r\n    }\r\n\r\n    return {\r\n        hits: res.data.items,\r\n        pageCount\r\n    }\r\n}\r\n\r\nexport async function getReposDynamically(query) {\r\n    const res = await axios.get(`https://api.github.com/search/repositories?q=${query}+in:name+stars:>1000&per_page=10`);\r\n\r\n    return {\r\n        results: res.data.items\r\n    };\r\n}\r\n\r\nexport async function getReadMe(owner, repo) {\r\n    const res = await axios.get(`https://raw.githubusercontent.com/${owner}/${repo}/master/README.md`);\r\n    return res.data;\r\n}\r\n\r\n\r\nexport async function getWatchers(owner, repo, page = 1) {\r\n    const res = await axios.get(`https://api.github.com/repos/${owner}/${repo}/stargazers?per_page=40&page=${page}`);\r\n\r\n    let pageCount;\r\n    if (isLastPage(parseLink(res.headers.link))) {\r\n        pageCount = parseInt(parseLink(res.headers.link).prev.page, 10) + 1;\r\n    } else {\r\n        pageCount = parseInt(parseLink(res.headers.link).last.page, 10);\r\n    }\r\n\r\n    return {\r\n        watchers: res.data,\r\n        pageCount\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ListResults from './ListResults/ListResults';\r\nimport { getReposDynamically } from '../../api/api';\r\nclass Search extends Component {\r\n    state = {\r\n        query: \"\",\r\n        results: []\r\n    }\r\n\r\n    changeQuery = (e) => {\r\n        this.setState({ query: e.target.value })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.query !== this.state.query && this.state.query) {\r\n            const { query } = this.state;\r\n            getReposDynamically(query)\r\n                .then(data => {\r\n                    this.setState({ results: data.results })\r\n                })\r\n        }\r\n\r\n        if (prevState.query !== this.state.query && !this.state.query) {\r\n            this.removeResults();\r\n        }\r\n\r\n    }\r\n\r\n    removeResults = () => {\r\n        this.setState({ \r\n            results: [],\r\n            query: \"\"\r\n         });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header__search\">\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search readmes...\"\r\n                    value={this.state.query}\r\n                    onChange={this.changeQuery}\r\n                   />\r\n                <ListResults results={this.state.results} onClickLink={this.removeResults}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\n\r\nconst Select = (props) => {\r\n    const { value, optValues, onSelect, label, className } = props;\r\n    const options = optValues.map(val => (\r\n        <option key={val} value={val}>{val}</option>\r\n    ));\r\n\r\n    if (label) {\r\n        return (\r\n            <label className='controls-wrapper__label'>\r\n                <span>{label}</span>\r\n                <select className={className} value={value} onChange={onSelect}>\r\n                    {options}\r\n                </select>\r\n            </label>\r\n        );\r\n    } else {\r\n        return (\r\n            <select className={className} value={value} onChange={onSelect}>\r\n                {options}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faStar)\r\n\r\nconst Hit = (props) => {\r\n    const { name, url, avatar, stars, language, description, creationDate, updateDate, type, owner } = props;\r\n    return (\r\n        <li className='hit'>\r\n            <div className='hit__header'>\r\n                <div className='hit__avatar'>\r\n                    <img src={avatar} alt={name}/>\r\n                </div>\r\n                <h2 className='hit__title'><a href={url}>{name}</a></h2>\r\n                <div className='hit__language'>\r\n                    <p>{language}</p>\r\n                </div>\r\n                <Link className='hit__stars' to={'/' + owner + '/' + name + '/starwatchers'}>\r\n                    <FontAwesomeIcon icon=\"star\" size='xs' color='#FBBC05' />\r\n                    <p>{stars}</p>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='hit__body'>\r\n            <h3>{type}</h3>\r\n                <p>{description}</p>\r\n                <p>Created at: {creationDate.substr(0, 10)}</p>\r\n                <p>Last update: {updateDate.substr(0, 10)}</p>            \r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Hit;\r\n","import React, { Component } from 'react';\r\nimport Paginate from 'react-paginate';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faChevronLeft, faChevronRight);\r\n\r\nclass WithPaginate extends Component {\r\n\r\n    changePageHandler = (data) => {\r\n        //Change navigation behviour based on component being rendered\r\n        const page = data.selected + 1;\r\n        const {props: {className}} = this.props.children; //nested destructuring\r\n        const {history, match} = this.props.router;\r\n        if(className === 'hits') {\r\n            history.push('/page' + page);\r\n        } else if(className === 'watchers') {\r\n            if(match.url[match.url.length - 1] === '/') {\r\n                 history.push(match.url + page);\r\n            } else {\r\n                history.push(match.url + '/' + page);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pathname = this.props.router.location.pathname;\r\n            const regex = /\\d+/;\r\n            let currentPage;\r\n\r\n            if (pathname === '/' || pathname.endsWith('/starwatchers')) {\r\n                currentPage = 1;\r\n            } else {\r\n                currentPage = parseInt(pathname.match(regex)[0], 10);\r\n            }\r\n\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n                <Paginate\r\n                    pageCount={this.props.pageCount}\r\n                    pageRangeDisplayed={3}\r\n                    marginPagesDisplayed={2}\r\n                    onPageChange={this.changePageHandler}\r\n                    disableInitialCallback\r\n                    forcePage={currentPage - 1}\r\n                    containerClassName='paginate-wrapper'\r\n                    pageLinkClassName='paginate-link'\r\n                    pageClassName='paginate-li'\r\n                    previousClassName='paginate-li'\r\n                    nextClassName='paginate-li'\r\n                    previousLabel={<FontAwesomeIcon icon='chevron-left' />}\r\n                    nextLabel={<FontAwesomeIcon icon='chevron-right' />}\r\n                    activeClassName='active-link'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WithPaginate;\r\n","import React from 'react'\r\nimport './LoadingBar.css';\r\n\r\nconst LoadingBar = (props) => {\r\n  return (\r\n    <div className='bar'>\r\n      <div style={{width: props.percentage + '%'}} className='bar__filler'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingBar;\r\n","import React from 'react';\r\nimport Hit from './Hit/Hit';\r\nimport WithPaginate from '../../hoc/WithPaginate/WithPaginate';\r\nimport LoadingBar from '../LoadingBar/LoadingBar';\r\n\r\nimport { getRepos } from '../../api/api';\r\n\r\nclass Hits extends React.Component {\r\n\r\n    state = {\r\n        hits: [],\r\n        pageCount: 0,\r\n        loading: false,\r\n        error: null,\r\n        percentage: 0\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const pathname = this.props.location.pathname;\r\n        const { language, date } = this.props;\r\n\r\n        this.setState({ loading: true, percentage: 0 });\r\n\r\n        this.interval = setInterval(() => {\r\n          this.setState(prevState => ({\r\n              percentage: prevState.percentage + 10\r\n          }));\r\n        }, 100);\r\n\r\n        /* Get repos based on current path */\r\n        if (pathname === '/' || pathname === '/page1') {\r\n            getRepos(language, date)\r\n                .then(data => {\r\n                    clearInterval(this.interval);\r\n                    this.setState({\r\n                        hits: data.hits,\r\n                        pageCount: data.pageCount,\r\n                        percentage: 100,\r\n                        loading: false\r\n                    });\r\n                })\r\n                .catch(err => this.setState({ error: err.message }))\r\n        } else {\r\n            const regEx = /\\d+/;\r\n            const currentPage = pathname.match(regEx)[0];\r\n            getRepos(language, date, currentPage)\r\n                .then(data => {\r\n                  clearInterval(this.interval);\r\n                    this.setState({\r\n                        hits: data.hits,\r\n                        pageCount: data.pageCount,\r\n                        percentage: 100,\r\n                        loading: false\r\n                    });\r\n                })\r\n                .catch(err => this.setState({ error: err.message }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        /*Since the path or lang or date changed, get repos for the new page*/\r\n        if (prevProps.location.pathname !== this.props.location.pathname ||\r\n            prevProps.language !== this.props.language ||\r\n            prevProps.date !== this.props.date) {\r\n            let page;\r\n            const regEx = /\\d+/;\r\n            const { language, date } = this.props;\r\n\r\n            if (this.props.location.pathname === '/') {\r\n                page = 1;\r\n            } else {\r\n                page = this.props.location.pathname.match(regEx)[0]; //extract the number of current page from pathname\r\n            }\r\n\r\n            this.setState({ loading: true, percentage: 0 });\r\n\r\n            const interval = setInterval(() => {\r\n                this.setState(prevState => ({\r\n                    percentage: prevState.percentage + 10\r\n                }));\r\n            }, 100);\r\n\r\n            getRepos(language, date, page)\r\n                .then(data => {\r\n                    clearInterval(interval);\r\n                    this.setState({ hits: data.hits, percentage: 100, loading: false });\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const hits = this.state.hits.map(hit => {\r\n            /*Remove dummy repo named eeeeee from the results*/\r\n            if (hit.name.includes('eeeeeee')) {\r\n                return null;\r\n            } else {\r\n                return (\r\n                    <Hit\r\n                        key={hit.id}\r\n                        owner={hit.owner.login}\r\n                        name={hit.name}\r\n                        url={hit.html_url}\r\n                        avatar={hit.owner.avatar_url}\r\n                        stars={hit.stargazers_count}\r\n                        language={hit.language}\r\n                        description={hit.description}\r\n                        creationDate={hit.created_at}\r\n                        updateDate={hit.updated_at}\r\n                        type={hit.owner.type} />\r\n                );\r\n            }\r\n        });\r\n\r\n        if (!this.state.loading && this.state.percentage >= 100) {\r\n            return (\r\n                <WithPaginate pageCount={this.state.pageCount} router={{\r\n                    history: this.props.history,\r\n                    match: this.props.match,\r\n                    location: this.props.location\r\n                    }}>\r\n                    <ul className='hits'>\r\n                        {hits}\r\n                    </ul>\r\n                </WithPaginate>\r\n            )    \r\n        } else {\r\n            if (!this.state.error) {\r\n                return <LoadingBar percentage={this.state.percentage} />\r\n            } else {\r\n                return <h1>{this.state.error}</h1>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Hits;\r\n","import React from 'react';\r\n\r\nconst Watcher = (props) => {\r\n    const { avatar, name, url} = props;\r\n    return (\r\n        <li className='watcher'>\r\n            <div className='watcher__avatar'>\r\n                <img src={avatar} alt={name}/>\r\n            </div>\r\n            <h3><a href={url} >{name}</a></h3>\r\n        </li>\r\n    )\r\n}\r\n          \r\nexport default Watcher;\r\n","import React, { Component } from 'react';\r\nimport Watcher from './Watcher/Watcher';\r\n\r\nimport WithPaginate from '../../hoc/WithPaginate/WithPaginate';\r\nimport './StarWatchers.css';\r\nimport { getWatchers } from '../../api/api';\r\n\r\nclass StarWatchers extends Component {\r\n    state = {\r\n        watchers: [],\r\n        pageCount: 0,\r\n        error: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { owner, repo } = this.props.match.params;\r\n        const pathname = this.props.location.pathname;\r\n        if (pathname.endsWith('/starwatchers') || pathname.endsWith('/starwatchers/1')) {\r\n            getWatchers(owner, repo)\r\n                .then(data => {\r\n                    this.setState({\r\n                        watchers: data.watchers,\r\n                        pageCount: data.pageCount\r\n                    });\r\n                })\r\n                .catch(err => this.setState({ error: err.message }))\r\n        } else {\r\n            const regEx = /\\d+/;\r\n            const currentPage = pathname.match(regEx)[0];\r\n\r\n            getWatchers(owner, repo, currentPage)\r\n                .then(data => {\r\n                    this.setState({\r\n                        watchers: data.watchers,\r\n                        pageCount: data.pageCount\r\n                    });\r\n                })\r\n                .catch(err => this.setState({ error: err.message }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.location.pathname !== this.props.location.pathname) {\r\n            let page;\r\n            const regEx = /\\d+/;\r\n            const { owner, repo } = this.props.match.params;\r\n\r\n            if (!this.props.location.pathname.match(regEx)) {\r\n                page = 1;\r\n            } else {\r\n                page = this.props.location.pathname.match(regEx)[0]; //extract the number of current page from pathname\r\n            }\r\n\r\n            getWatchers(owner, repo, page)\r\n                .then(data => {\r\n                    this.setState({ watchers: data.watchers });\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const watchers = this.state.watchers.map(watcher => {\r\n            return <Watcher\r\n                key={watcher.id}\r\n                avatar={watcher.avatar_url}\r\n                name={watcher.login}\r\n                url={watcher.html_url} />\r\n        });\r\n\r\n        let output =\r\n            <WithPaginate\r\n                pageCount={this.state.pageCount}\r\n                router={{\r\n                    history: this.props.history,\r\n                    match: this.props.match,\r\n                    location: this.props.location\r\n                }}>\r\n                <ul className='watchers'>{watchers}</ul>\r\n            </WithPaginate>\r\n\r\n        if (this.state.error) {\r\n            output = <h1>{this.state.error}</h1>\r\n        }\r\n\r\n        return output;\r\n    }\r\n}\r\n\r\nexport default StarWatchers;\r\n","export const getDateOfPastYears = (years) => {\r\n    const now = Date.now();\r\n    const msOfYears = (365 * years) * 86400000;\r\n    const pastDate = new Date(now - msOfYears);\r\n    const isoDate = pastDate.toISOString().substr(0, 10); //github api requires iso formatted date\r\n    return isoDate;\r\n};\r\n\r\nexport const parseHtml = (string) =>{\r\n    const el = document.createElement('div');\r\n    el.innerHTML = string;\r\n    return el;\r\n};\r\n\r\nexport const walkTheNode = (node, func) => {\r\n    func(node);\r\n    node = node.firstElementChild;\r\n    while (node) {\r\n        walkTheNode(node, func);\r\n        node = node.nextElementSibling;\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { getReadMe } from '../../api/api';\r\nimport { parseHtml, walkTheNode } from '../../utilities/utilities';\r\nconst marked = require('marked');\r\n\r\nclass ReadMePage extends Component {\r\n\r\n    state = {\r\n        markdown: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { owner, repo } = this.props.match.params;\r\n\r\n        getReadMe(owner, repo)\r\n            .then(markdown => {\r\n                this.setState({ markdown })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.location.pathname !== this.props.location.pathname) {\r\n            const { owner, repo } = this.props.match.params;\r\n\r\n            getReadMe(owner, repo)\r\n                .then(markdown => {\r\n                    this.setState({ markdown })\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        /*\r\n            * marked return a string representing the html\r\n            * parse that string, so one can walks recursively the dom\r\n            * reset alignment of text and remove all images from original markdown, to avoid layout problems\r\n            * set as innerHtml of this component\r\n        */\r\n        const htmlInString = marked(this.state.markdown);\r\n        const parsed = parseHtml(htmlInString);\r\n        walkTheNode(parsed, (node) => {\r\n            if (node.nodeType === 1) {\r\n                if (node.getAttribute('align')) {\r\n                    node.removeAttribute('align');\r\n                }\r\n                if (node.nodeName === 'IMG') {\r\n                    node.style.display = 'none'; //do not remove, otherwise recursion will not work\r\n                }\r\n            }\r\n        });\r\n        return <div className=\"readme-page\" dangerouslySetInnerHTML={{ __html: parsed.innerHTML }}></div>\r\n    }\r\n}\r\n\r\n\r\nexport default ReadMePage;\r\n","import React, { Component } from 'react';\nimport Search from './components/Search/Search';\nimport Select from './components/Select/Select';\nimport Hits from './components/Hits/Hits';\nimport StarWatchers from './components/StarWatchers/StarWatchers';\nimport ReadMePage from './components/ReadMePage/ReadMePage';\n\nimport { getDateOfPastYears } from './utilities/utilities';\n\nimport { Route, Switch, Link } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    language: 'javascript',\n    date: '2011-01-01',\n    dateSelectValue: 'all'\n  }\n\n  changeLanguageHandler = (e) => {\n    this.setState({ language: e.target.value });\n  }\n\n  changeDateHandler = (e) => {\n    this.setState({ dateSelectValue: e.target.value });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.dateSelectValue !== this.state.dateSelectValue) {\n      switch (this.state.dateSelectValue) {\n        case 'all':\n          this.setState({ date: '2011-01-01' });\n          break;\n        case 'last 5 years':\n          this.setState({\n            date: getDateOfPastYears(5)\n          });\n          break;\n        case 'last year':\n          this.setState({\n            date: getDateOfPastYears(1)\n          });\n          break;\n      }\n    }\n  }\n\n\n  render() {\n    let controlsWrapper =\n      <div className='controls-wrapper'>\n        <Select\n          className='controls-wrapper__select'\n          label='Search'\n          optValues={['all', 'javascript', 'java', 'python', 'ruby']}\n          onSelect={this.changeLanguageHandler}\n          value={this.state.language} />\n        <Select\n          className='controls-wrapper__select'\n          label='for'\n          optValues={['all', 'last year', 'last 5 years']}\n          onSelect={this.changeDateHandler}\n          value={this.dateSelectValue} />\n      </div>;\n\n    let homeLink = null;\n    const { pathname } = this.props.location;\n\n    if (pathname.includes('/readme') || pathname.includes('/starwatchers')) {\n      controlsWrapper = null;\n    }\n\n    if (pathname.includes('/readme') || pathname.includes('/starwatchers')) {\n      homeLink = <Link className='header__home-link' to='/'>Home</Link>;\n    }\n\n    return (\n      <div className=\"App\">\n        <header className='header'>\n          {homeLink}\n          <h1 className='header__title'>Most popular github repos</h1>\n          <Search />\n        </header>\n\n        {controlsWrapper}\n\n        <Switch>\n          <Route path='/:owner/:repo/readme' component={ReadMePage} />\n          <Route path='/:owner/:repo/starwatchers' component={StarWatchers} />\n          <Route path='/' render={(props) => (\n            <Hits language={this.state.language} date={this.state.date} {...props} />\n          )} />\n        </Switch>\n        <footer className=\"footer\">Made with love by <a href=\"https://github.com/donjosef\">Giuseppe Montanaro</a></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter basename='/github-best-repos'>\n    <Route component={App} />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}